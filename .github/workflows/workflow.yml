name: Main workflow

on:
  - pull_request
  - push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          # - ubuntu-latest
          # - windows-latest
        ocaml-version:
          - 4.11.0
        llvm-version:
          - 10.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Cache LLVM build
        id: cache-llvm-build
        uses: actions/cache@v2
        with:
          path: |
            external/llvm/llvm-projects/build
          key: ${{ matrix.os }}

      - name: Build LLVM
        if: steps.cache-llvm-build.outputs.cache-hit != 'true'
        run: |
          cd external/llvm/llvm-projects
          mkdir build
          cd build
          cmake -G Ninja -DLLVM_ENABLE_PROJECTS='' -DCMAKE_BUILD_TYPE=Debug -DLLVM_ENABLE_ASSERTIONS=On -DLLVM_TARGETS_TO_BUILD="X86" ../llvm
          ninja
      
      - name: Setup LLVM bindings
        run: |
          cd external/llvm
          ./setup.sh

      - run: opam install dune ocaml-compiler-libs core ppx_jane ppx_inline_test

      - run: opam exec -- dune build

      - run: opam exec -- dune runtest

